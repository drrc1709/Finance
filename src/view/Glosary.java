/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.google.gson.Gson;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
import javax.swing.DefaultListModel;
import model.Words;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import javax.swing.event.ListSelectionEvent;

/**
 *
 * @author daniel.rodriguez
 */
public class Glosary extends javax.swing.JPanel {

    private static final long serialVersionUID = 1L;

    /**
     * Creates new form Glosary
     *
     * @throws java.io.FileNotFoundException
     * @throws org.json.JSONException
     */
    public Glosary() throws FileNotFoundException, IOException, JSONException {
        initComponents();       
        list.setModel(new DefaultListModel());
        DefaultListModel listModel = (DefaultListModel) list.getModel();
        JSONArray array = request();
        for (int i = 0; i < array.length(); i++) {
            JSONObject object = array.getJSONObject(i);
            Gson gson = new Gson();
            Words w = gson.fromJson(object.toString(), Words.class);
            listModel.addElement(w);
        }

        list.addListSelectionListener((ListSelectionEvent e) -> {
            if (e.getValueIsAdjusting()) {               
                meaningJTA.setText(((Words) listModel.getElementAt(list.getSelectedIndex())).getMeaning());
            }
        });
    }

    public static JSONArray request() throws IOException, JSONException {
        JSONArray array;
        String path = "E:\\word.json";
        StringBuffer response;
        try (
            BufferedReader in = new BufferedReader(new FileReader(path))) {
            String inputLine;
            response = new StringBuffer();
            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
        }
        JSONObject myResponse = new JSONObject(response.toString());
        array = myResponse.getJSONArray("words");
        return array;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMI_Copy = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        meaningJTA = new javax.swing.JTextArea();

        jPopupMenu1.setBackground(new java.awt.Color(44, 62, 80));
        jPopupMenu1.setForeground(new java.awt.Color(255, 255, 255));

        jMI_Copy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMI_Copy.setBackground(new java.awt.Color(44, 62, 80));
        jMI_Copy.setForeground(new java.awt.Color(255, 255, 255));
        jMI_Copy.setText("Copy");
        jMI_Copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMI_CopyActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMI_Copy);

        setBackground(new java.awt.Color(44, 62, 80));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 134, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GLOSARY");
        jLabel1.setToolTipText("");

        list.setBackground(new java.awt.Color(44, 62, 80));
        list.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        list.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        list.setForeground(new java.awt.Color(255, 255, 255));
        list.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        list.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        list.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(list);

        meaningJTA.setEditable(false);
        meaningJTA.setBackground(new java.awt.Color(44, 62, 80));
        meaningJTA.setColumns(20);
        meaningJTA.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        meaningJTA.setForeground(new java.awt.Color(255, 255, 255));
        meaningJTA.setLineWrap(true);
        meaningJTA.setRows(5);
        meaningJTA.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), javax.swing.BorderFactory.createEmptyBorder(3, 6, 3, 3)));
        meaningJTA.setCaretColor(new java.awt.Color(255, 255, 255));
        meaningJTA.setComponentPopupMenu(jPopupMenu1);
        meaningJTA.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane2.setViewportView(meaningJTA);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void listValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listValueChanged
    }//GEN-LAST:event_listValueChanged

    private void jMI_CopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMI_CopyActionPerformed
        meaningJTA.copy();
    }//GEN-LAST:event_jMI_CopyActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMI_Copy;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> list;
    private javax.swing.JTextArea meaningJTA;
    // End of variables declaration//GEN-END:variables
}
